#' Compute Mean with Arithmetic Operations
#'
#' @param x A numeric vector.
#' @param num A numeric value to apply an operation (default = 0).
#' @param operation A string specifying the operation: "add", "subtract", "multiply", or "divide".
#' @return The computed mean after the specified operation.
#' @examples
#' stat_mean(c(1, 2, 3, 4, 5), 2, "add")
#' stat_mean(c(10, 20, 30, 40), 5, "divide")
#' @export
stat_mean <- function(x, num = 0, operation = "add") {
m <- mean(x, na.rm = TRUE)
if (operation == "add") return(m + num)
if (operation == "subtract") return(m - num)
if (operation == "multiply") return(m * num)
if (operation == "divide") return(m / num)
stop("Invalid operation. Choose from 'add', 'subtract', 'multiply', or 'divide'.")
}
#' Compute Variance with Arithmetic Operations
#' @param x A numeric vector.
#' @param num A numeric value to apply an operation.
#' @param operation A string specifying the operation.
#' @return The computed variance after the specified operation.
#' @export
stat_var <- function(x, num = 1, operation = "multiply") {
v <- var(x, na.rm = TRUE)
if (operation == "add") return(v + num)
if (operation == "subtract") return(v - num)
if (operation == "multiply") return(v * num)
if (operation == "divide") return(v / num)
stop("Invalid operation. Choose from 'add', 'subtract', 'multiply', or 'divide'.")
}
#' Compute Standard Deviation with Arithmetic Operations
#' @param x A numeric vector.
#' @param num A numeric value to apply an operation.
#' @param operation A string specifying the operation.
#' @return The computed standard deviation after the specified operation.
#' @export
stat_sd <- function(x, num = 1, operation = "multiply") {
s <- sd(x, na.rm = TRUE)
if (operation == "add") return(s + num)
if (operation == "subtract") return(s - num)
if (operation == "multiply") return(s * num)
if (operation == "divide") return(s / num)
stop("Invalid operation. Choose from 'add', 'subtract', 'multiply', or 'divide'.")
}
#' Compute Standard Error with Arithmetic Operations
#' @param x A numeric vector.
#' @param num A numeric value to apply an operation.
#' @param operation A string specifying the operation.
#' @return The computed standard error after the specified operation.
#' @export
stat_se <- function(x, num = 1, operation = "multiply") {
se <- sd(x, na.rm = TRUE) / sqrt(length(x))
if (operation == "add") return(se + num)
if (operation == "subtract") return(se - num)
if (operation == "multiply") return(se * num)
if (operation == "divide") return(se / num)
stop("Invalid operation. Choose from 'add', 'subtract', 'multiply', or 'divide'.")
}
library(devtools)
install.packages("devtools")
require(devtools)
document()
use_vignette()
rlang::last_trace()
library(devtools)
document()
document()
export(stat_mean)
library(roxygen2)
library(devtools)
document()
use_roxygen_md()
document()
use_roxygen_md()
document()
unlink("NAMESPACE")   # Deletes the NAMESPACE file
unlink("man/*")       # Deletes documentation files
devtools::document()  # Regenerates documentation
unlink("NAMESPACE")   # Deletes the NAMESPACE file
unlink("man/*")       # Deletes documentation files
devtools::document()  # Regenerates documentation
devtools::install()
library(yourpackagename)
devtools::install()
library(StatTool)
?stat_mean
stat_mean(c(1, 2, 3, 4, 5), 2, "add")
stat_mean(c(1, 2, 3, 4, 5), 2, "multiply")
stat_mean(c(1, 2, 3, 4, 5), 2, "divide")
1/20/1
